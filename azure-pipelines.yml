resources:
  - repo: self
queue:
  name: Hosted Ubuntu 1604
  timeoutInMinutes: 60
variables:
  GOBIN: "$(GOPATH)/bin"
  GOPATH: "$(system.defaultWorkingDirectory)/gopath"
  modulePath: "$(GOPATH)/src/github.com/$(build.repository.name)"
  GOROOT: "/usr/local/go1.14"
steps:
  - task: Docker@1
    displayName: "ACR Login"
    inputs:
      containerregistrytype: "Container Registry"
      dockerRegistryEndpoint: presidio
      command: login
  - task: GoTool@0
    inputs:
      version: '1.14.6'
    displayName: "Setup Go Env - Go Tool"
  - bash: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      mv !(gopath) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: "Prepare directories"
  - bash: |
      curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.27.0
      go mod download -x
      make DOCKER_REGISTRY=$(DOCKER_REGISTRY) PRESIDIO_LABEL=$(Build.BuildID) test-functional
    workingDirectory: "$(modulePath)"
    displayName: "Build & Test "
  - bash: "make DOCKER_REGISTRY=$(DOCKER_REGISTRY) PRESIDIO_LABEL=$(Build.BuildID) docker-push"
    workingDirectory: "$(modulePath)"
    displayName: "Push Docker Images"
